{"ast":null,"code":"export const SHARDEUM_UNSTABLE = {\n  chainId: 8080,\n  name: 'Shardeum Unstablenet',\n  rpcUrl: 'https://api-unstable.shardeum.org',\n  explorerUrl: 'https://explorer-unstable.shardeum.org',\n  currency: {\n    name: 'Shardeum',\n    symbol: 'SHM',\n    decimals: 18\n  },\n  contracts: {\n    shardFlip: '0x0000000000000000000000000000000000000000',\n    // Placeholder - replace with actual contract address\n    token: '0x0000000000000000000000000000000000000000' // If using a separate token, otherwise SHM is native\n  }\n};\nexport const SUPPORTED_NETWORKS = [SHARDEUM_UNSTABLE];\nexport const DEFAULT_BET_AMOUNTS = ['0.01', '0.1', '0.5', '1'];\nexport const REFRESH_INTERVAL = 10000; // 10 seconds\n\nexport const SOUND_URLS = {\n  coinFlip: '/sounds/coin-flip.mp3',\n  win: '/sounds/win.mp3',\n  lose: '/sounds/lose.mp3',\n  click: '/sounds/click.mp3'\n};\nexport const CONTRACT_ABI = [\n// Placeholder ABI - replace with actual contract ABI\n{\n  \"inputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"choice\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"flipCoin\",\n  \"outputs\": [],\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"player\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getPlayerStats\",\n  \"outputs\": [{\n    \"components\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"totalGames\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"totalWins\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"totalWagered\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"totalWon\",\n      \"type\": \"uint256\"\n    }],\n    \"internalType\": \"struct ShardFlip.PlayerStats\",\n    \"name\": \"\",\n    \"type\": \"tuple\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"getRecentGames\",\n  \"outputs\": [{\n    \"components\": [{\n      \"internalType\": \"address\",\n      \"name\": \"player\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"betAmount\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"bool\",\n      \"name\": \"choice\",\n      \"type\": \"bool\"\n    }, {\n      \"internalType\": \"bool\",\n      \"name\": \"result\",\n      \"type\": \"bool\"\n    }, {\n      \"internalType\": \"bool\",\n      \"name\": \"won\",\n      \"type\": \"bool\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"payout\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"timestamp\",\n      \"type\": \"uint256\"\n    }],\n    \"internalType\": \"struct ShardFlip.GameResult[]\",\n    \"name\": \"\",\n    \"type\": \"tuple[]\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"getGameStats\",\n  \"outputs\": [{\n    \"components\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"totalGames\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"totalVolume\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"totalPayout\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"activeUsers\",\n      \"type\": \"uint256\"\n    }],\n    \"internalType\": \"struct ShardFlip.GameStats\",\n    \"name\": \"\",\n    \"type\": \"tuple\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nexport const ETHERS_ERROR_CODES = {\n  REJECTED: 'ACTION_REJECTED',\n  INSUFFICIENT_FUNDS: 'INSUFFICIENT_FUNDS',\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  UNPREDICTABLE_GAS_LIMIT: 'UNPREDICTABLE_GAS_LIMIT'\n};","map":{"version":3,"names":["SHARDEUM_UNSTABLE","chainId","name","rpcUrl","explorerUrl","currency","symbol","decimals","contracts","shardFlip","token","SUPPORTED_NETWORKS","DEFAULT_BET_AMOUNTS","REFRESH_INTERVAL","SOUND_URLS","coinFlip","win","lose","click","CONTRACT_ABI","ETHERS_ERROR_CODES","REJECTED","INSUFFICIENT_FUNDS","NETWORK_ERROR","UNPREDICTABLE_GAS_LIMIT"],"sources":["/Users/nickkz/Desktop/Shard-Flip/src/utils/constants.ts"],"sourcesContent":["import { NetworkConfig } from '../types';\n\nexport const SHARDEUM_UNSTABLE: NetworkConfig = {\n  chainId: 8080,\n  name: 'Shardeum Unstablenet',\n  rpcUrl: 'https://api-unstable.shardeum.org',\n  explorerUrl: 'https://explorer-unstable.shardeum.org',\n  currency: {\n    name: 'Shardeum',\n    symbol: 'SHM',\n    decimals: 18\n  },\n  contracts: {\n    shardFlip: '0x0000000000000000000000000000000000000000', // Placeholder - replace with actual contract address\n    token: '0x0000000000000000000000000000000000000000' // If using a separate token, otherwise SHM is native\n  }\n};\n\nexport const SUPPORTED_NETWORKS = [SHARDEUM_UNSTABLE];\n\nexport const DEFAULT_BET_AMOUNTS = ['0.01', '0.1', '0.5', '1'];\n\nexport const REFRESH_INTERVAL = 10000; // 10 seconds\n\nexport const SOUND_URLS = {\n  coinFlip: '/sounds/coin-flip.mp3',\n  win: '/sounds/win.mp3',\n  lose: '/sounds/lose.mp3',\n  click: '/sounds/click.mp3'\n};\n\nexport const CONTRACT_ABI = [\n  // Placeholder ABI - replace with actual contract ABI\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"choice\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"flipCoin\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"player\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getPlayerStats\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"totalGames\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"totalWins\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"totalWagered\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"totalWon\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct ShardFlip.PlayerStats\",\n        \"name\": \"\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getRecentGames\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"player\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"betAmount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"choice\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"result\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"won\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"payout\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"timestamp\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct ShardFlip.GameResult[]\",\n        \"name\": \"\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getGameStats\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"totalGames\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"totalVolume\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"totalPayout\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"activeUsers\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct ShardFlip.GameStats\",\n        \"name\": \"\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\nexport const ETHERS_ERROR_CODES = {\n  REJECTED: 'ACTION_REJECTED',\n  INSUFFICIENT_FUNDS: 'INSUFFICIENT_FUNDS',\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  UNPREDICTABLE_GAS_LIMIT: 'UNPREDICTABLE_GAS_LIMIT'\n} as const;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}