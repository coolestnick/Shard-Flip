{"ast":null,"code":"var _jsxFileName = \"/Users/nickkz/Desktop/Shard-Flip/src/contexts/Web3Context.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { SHARDEUM_UNSTABLE } from '../utils/constants';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Web3Context = /*#__PURE__*/createContext(undefined);\nexport const useWeb3 = () => {\n  _s();\n  const context = useContext(Web3Context);\n  if (!context) {\n    throw new Error('useWeb3 must be used within a Web3Provider');\n  }\n  return context;\n};\n_s(useWeb3, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const Web3Provider = ({\n  children\n}) => {\n  _s2();\n  const [wallet, setWallet] = useState({\n    address: null,\n    balance: '0',\n    isConnecting: false,\n    isConnected: false,\n    chainId: null\n  });\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const formatBalance = balance => {\n    return ethers.formatEther(balance);\n  };\n  const refreshBalance = async () => {\n    if (!provider || !wallet.address) return;\n    try {\n      const balance = await provider.getBalance(wallet.address);\n      setWallet(prev => ({\n        ...prev,\n        balance: formatBalance(balance)\n      }));\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n  const switchNetwork = async () => {\n    if (!window.ethereum) return false;\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: `0x${SHARDEUM_UNSTABLE.chainId.toString(16)}`\n        }]\n      });\n      return true;\n    } catch (switchError) {\n      // This error code indicates that the chain has not been added to MetaMask\n      if (switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: `0x${SHARDEUM_UNSTABLE.chainId.toString(16)}`,\n              chainName: SHARDEUM_UNSTABLE.name,\n              rpcUrls: [SHARDEUM_UNSTABLE.rpcUrl],\n              blockExplorerUrls: [SHARDEUM_UNSTABLE.explorerUrl],\n              nativeCurrency: {\n                name: SHARDEUM_UNSTABLE.currency.name,\n                symbol: SHARDEUM_UNSTABLE.currency.symbol,\n                decimals: SHARDEUM_UNSTABLE.currency.decimals\n              }\n            }]\n          });\n          return true;\n        } catch (addError) {\n          console.error('Error adding network:', addError);\n          toast.error('Failed to add Shardeum network');\n          return false;\n        }\n      } else {\n        console.error('Error switching network:', switchError);\n        toast.error('Failed to switch to Shardeum network');\n        return false;\n      }\n    }\n  };\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      toast.error('MetaMask not found! Please install MetaMask.');\n      return;\n    }\n    setWallet(prev => ({\n      ...prev,\n      isConnecting: true\n    }));\n    try {\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      if (accounts.length === 0) {\n        toast.error('No accounts found');\n        return;\n      }\n      const newProvider = new ethers.BrowserProvider(window.ethereum);\n      const network = await newProvider.getNetwork();\n\n      // Check if we're on the correct network\n      if (Number(network.chainId) !== SHARDEUM_UNSTABLE.chainId) {\n        const switched = await switchNetwork();\n        if (!switched) {\n          setWallet(prev => ({\n            ...prev,\n            isConnecting: false\n          }));\n          return;\n        }\n      }\n      const newSigner = await newProvider.getSigner();\n      const address = await newSigner.getAddress();\n      const balance = await newProvider.getBalance(address);\n      setProvider(newProvider);\n      setSigner(newSigner);\n      setWallet({\n        address,\n        balance: formatBalance(balance),\n        isConnecting: false,\n        isConnected: true,\n        chainId: Number(network.chainId)\n      });\n      toast.success('Wallet connected successfully!');\n\n      // Store connection state\n      localStorage.setItem('walletConnected', 'true');\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      if (error.code === 4001) {\n        toast.error('Connection rejected by user');\n      } else {\n        toast.error('Failed to connect wallet');\n      }\n      setWallet(prev => ({\n        ...prev,\n        isConnecting: false\n      }));\n    }\n  };\n  const disconnectWallet = () => {\n    setWallet({\n      address: null,\n      balance: '0',\n      isConnecting: false,\n      isConnected: false,\n      chainId: null\n    });\n    setProvider(null);\n    setSigner(null);\n    localStorage.removeItem('walletConnected');\n    toast.success('Wallet disconnected');\n  };\n\n  // Auto-connect if previously connected\n  useEffect(() => {\n    const autoConnect = async () => {\n      if (localStorage.getItem('walletConnected') === 'true' && window.ethereum) {\n        try {\n          const accounts = await window.ethereum.request({\n            method: 'eth_accounts'\n          });\n          if (accounts.length > 0) {\n            await connectWallet();\n          }\n        } catch (error) {\n          console.error('Error auto-connecting:', error);\n        }\n      }\n    };\n    autoConnect();\n  }, []);\n\n  // Listen for account changes\n  useEffect(() => {\n    if (!window.ethereum) return;\n    const handleAccountsChanged = accounts => {\n      if (accounts.length === 0) {\n        disconnectWallet();\n      } else if (accounts[0] !== wallet.address) {\n        // Account changed, reconnect\n        connectWallet();\n      }\n    };\n    const handleChainChanged = chainId => {\n      const newChainId = parseInt(chainId, 16);\n      setWallet(prev => ({\n        ...prev,\n        chainId: newChainId\n      }));\n      if (newChainId !== SHARDEUM_UNSTABLE.chainId && wallet.isConnected) {\n        toast.error('Please switch to Shardeum Unstablenet');\n      }\n    };\n    const handleDisconnect = () => {\n      disconnectWallet();\n    };\n    window.ethereum.on('accountsChanged', handleAccountsChanged);\n    window.ethereum.on('chainChanged', handleChainChanged);\n    window.ethereum.on('disconnect', handleDisconnect);\n    return () => {\n      var _window$ethereum;\n      if ((_window$ethereum = window.ethereum) !== null && _window$ethereum !== void 0 && _window$ethereum.removeListener) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n        window.ethereum.removeListener('disconnect', handleDisconnect);\n      }\n    };\n  }, [wallet.address, wallet.isConnected]);\n\n  // Auto-refresh balance\n  useEffect(() => {\n    if (!wallet.isConnected || !provider || !wallet.address) return;\n    const interval = setInterval(refreshBalance, 30000); // Refresh every 30 seconds\n\n    return () => clearInterval(interval);\n  }, [wallet.isConnected, provider, wallet.address]);\n  const value = {\n    wallet,\n    provider,\n    signer,\n    connectWallet,\n    disconnectWallet,\n    switchNetwork,\n    refreshBalance\n  };\n  return /*#__PURE__*/_jsxDEV(Web3Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n\n// Extend Window interface for TypeScript\n_s2(Web3Provider, \"h5mSvm0bVyvXwsipM9nzOSLOKzo=\");\n_c = Web3Provider;\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ethers","SHARDEUM_UNSTABLE","toast","jsxDEV","_jsxDEV","Web3Context","undefined","useWeb3","_s","context","Error","Web3Provider","children","_s2","wallet","setWallet","address","balance","isConnecting","isConnected","chainId","provider","setProvider","signer","setSigner","formatBalance","formatEther","refreshBalance","getBalance","prev","error","console","switchNetwork","window","ethereum","request","method","params","toString","switchError","code","chainName","name","rpcUrls","rpcUrl","blockExplorerUrls","explorerUrl","nativeCurrency","currency","symbol","decimals","addError","connectWallet","accounts","length","newProvider","BrowserProvider","network","getNetwork","Number","switched","newSigner","getSigner","getAddress","success","localStorage","setItem","disconnectWallet","removeItem","autoConnect","getItem","handleAccountsChanged","handleChainChanged","newChainId","parseInt","handleDisconnect","on","_window$ethereum","removeListener","interval","setInterval","clearInterval","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nickkz/Desktop/Shard-Flip/src/contexts/Web3Context.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { ethers } from 'ethers';\nimport { WalletState, NetworkConfig } from '../types';\nimport { SHARDEUM_UNSTABLE } from '../utils/constants';\nimport toast from 'react-hot-toast';\n\ninterface Web3ContextType {\n  wallet: WalletState;\n  provider: ethers.BrowserProvider | null;\n  signer: ethers.JsonRpcSigner | null;\n  connectWallet: () => Promise<void>;\n  disconnectWallet: () => void;\n  switchNetwork: () => Promise<boolean>;\n  refreshBalance: () => Promise<void>;\n}\n\nconst Web3Context = createContext<Web3ContextType | undefined>(undefined);\n\nexport const useWeb3 = () => {\n  const context = useContext(Web3Context);\n  if (!context) {\n    throw new Error('useWeb3 must be used within a Web3Provider');\n  }\n  return context;\n};\n\ninterface Web3ProviderProps {\n  children: ReactNode;\n}\n\nexport const Web3Provider: React.FC<Web3ProviderProps> = ({ children }) => {\n  const [wallet, setWallet] = useState<WalletState>({\n    address: null,\n    balance: '0',\n    isConnecting: false,\n    isConnected: false,\n    chainId: null\n  });\n\n  const [provider, setProvider] = useState<ethers.BrowserProvider | null>(null);\n  const [signer, setSigner] = useState<ethers.JsonRpcSigner | null>(null);\n\n  const formatBalance = (balance: bigint): string => {\n    return ethers.formatEther(balance);\n  };\n\n  const refreshBalance = async () => {\n    if (!provider || !wallet.address) return;\n\n    try {\n      const balance = await provider.getBalance(wallet.address);\n      setWallet(prev => ({\n        ...prev,\n        balance: formatBalance(balance)\n      }));\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n\n  const switchNetwork = async (): Promise<boolean> => {\n    if (!window.ethereum) return false;\n\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: `0x${SHARDEUM_UNSTABLE.chainId.toString(16)}` }],\n      });\n      return true;\n    } catch (switchError: any) {\n      // This error code indicates that the chain has not been added to MetaMask\n      if (switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: `0x${SHARDEUM_UNSTABLE.chainId.toString(16)}`,\n              chainName: SHARDEUM_UNSTABLE.name,\n              rpcUrls: [SHARDEUM_UNSTABLE.rpcUrl],\n              blockExplorerUrls: [SHARDEUM_UNSTABLE.explorerUrl],\n              nativeCurrency: {\n                name: SHARDEUM_UNSTABLE.currency.name,\n                symbol: SHARDEUM_UNSTABLE.currency.symbol,\n                decimals: SHARDEUM_UNSTABLE.currency.decimals\n              }\n            }]\n          });\n          return true;\n        } catch (addError) {\n          console.error('Error adding network:', addError);\n          toast.error('Failed to add Shardeum network');\n          return false;\n        }\n      } else {\n        console.error('Error switching network:', switchError);\n        toast.error('Failed to switch to Shardeum network');\n        return false;\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      toast.error('MetaMask not found! Please install MetaMask.');\n      return;\n    }\n\n    setWallet(prev => ({ ...prev, isConnecting: true }));\n\n    try {\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      if (accounts.length === 0) {\n        toast.error('No accounts found');\n        return;\n      }\n\n      const newProvider = new ethers.BrowserProvider(window.ethereum);\n      const network = await newProvider.getNetwork();\n      \n      // Check if we're on the correct network\n      if (Number(network.chainId) !== SHARDEUM_UNSTABLE.chainId) {\n        const switched = await switchNetwork();\n        if (!switched) {\n          setWallet(prev => ({ ...prev, isConnecting: false }));\n          return;\n        }\n      }\n\n      const newSigner = await newProvider.getSigner();\n      const address = await newSigner.getAddress();\n      const balance = await newProvider.getBalance(address);\n\n      setProvider(newProvider);\n      setSigner(newSigner);\n      setWallet({\n        address,\n        balance: formatBalance(balance),\n        isConnecting: false,\n        isConnected: true,\n        chainId: Number(network.chainId)\n      });\n\n      toast.success('Wallet connected successfully!');\n      \n      // Store connection state\n      localStorage.setItem('walletConnected', 'true');\n      \n    } catch (error: any) {\n      console.error('Error connecting wallet:', error);\n      if (error.code === 4001) {\n        toast.error('Connection rejected by user');\n      } else {\n        toast.error('Failed to connect wallet');\n      }\n      setWallet(prev => ({ ...prev, isConnecting: false }));\n    }\n  };\n\n  const disconnectWallet = () => {\n    setWallet({\n      address: null,\n      balance: '0',\n      isConnecting: false,\n      isConnected: false,\n      chainId: null\n    });\n    setProvider(null);\n    setSigner(null);\n    localStorage.removeItem('walletConnected');\n    toast.success('Wallet disconnected');\n  };\n\n  // Auto-connect if previously connected\n  useEffect(() => {\n    const autoConnect = async () => {\n      if (localStorage.getItem('walletConnected') === 'true' && window.ethereum) {\n        try {\n          const accounts = await window.ethereum.request({\n            method: 'eth_accounts'\n          });\n          \n          if (accounts.length > 0) {\n            await connectWallet();\n          }\n        } catch (error) {\n          console.error('Error auto-connecting:', error);\n        }\n      }\n    };\n\n    autoConnect();\n  }, []);\n\n  // Listen for account changes\n  useEffect(() => {\n    if (!window.ethereum) return;\n\n    const handleAccountsChanged = (accounts: string[]) => {\n      if (accounts.length === 0) {\n        disconnectWallet();\n      } else if (accounts[0] !== wallet.address) {\n        // Account changed, reconnect\n        connectWallet();\n      }\n    };\n\n    const handleChainChanged = (chainId: string) => {\n      const newChainId = parseInt(chainId, 16);\n      setWallet(prev => ({ ...prev, chainId: newChainId }));\n      \n      if (newChainId !== SHARDEUM_UNSTABLE.chainId && wallet.isConnected) {\n        toast.error('Please switch to Shardeum Unstablenet');\n      }\n    };\n\n    const handleDisconnect = () => {\n      disconnectWallet();\n    };\n\n    window.ethereum.on('accountsChanged', handleAccountsChanged);\n    window.ethereum.on('chainChanged', handleChainChanged);\n    window.ethereum.on('disconnect', handleDisconnect);\n\n    return () => {\n      if (window.ethereum?.removeListener) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n        window.ethereum.removeListener('disconnect', handleDisconnect);\n      }\n    };\n  }, [wallet.address, wallet.isConnected]);\n\n  // Auto-refresh balance\n  useEffect(() => {\n    if (!wallet.isConnected || !provider || !wallet.address) return;\n\n    const interval = setInterval(refreshBalance, 30000); // Refresh every 30 seconds\n\n    return () => clearInterval(interval);\n  }, [wallet.isConnected, provider, wallet.address]);\n\n  const value = {\n    wallet,\n    provider,\n    signer,\n    connectWallet,\n    disconnectWallet,\n    switchNetwork,\n    refreshBalance\n  };\n\n  return (\n    <Web3Context.Provider value={value}>\n      {children}\n    </Web3Context.Provider>\n  );\n};\n\n// Extend Window interface for TypeScript\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,SAASC,MAAM,QAAQ,QAAQ;AAE/B,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYpC,MAAMC,WAAW,gBAAGT,aAAa,CAA8BU,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGZ,UAAU,CAACQ,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAc;IAChDkB,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,GAAG;IACZC,YAAY,EAAE,KAAK;IACnBC,WAAW,EAAE,KAAK;IAClBC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAgC,IAAI,CAAC;EAC7E,MAAM,CAACyB,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAA8B,IAAI,CAAC;EAEvE,MAAM2B,aAAa,GAAIR,OAAe,IAAa;IACjD,OAAOjB,MAAM,CAAC0B,WAAW,CAACT,OAAO,CAAC;EACpC,CAAC;EAED,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACN,QAAQ,IAAI,CAACP,MAAM,CAACE,OAAO,EAAE;IAElC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMI,QAAQ,CAACO,UAAU,CAACd,MAAM,CAACE,OAAO,CAAC;MACzDD,SAAS,CAACc,IAAI,KAAK;QACjB,GAAGA,IAAI;QACPZ,OAAO,EAAEQ,aAAa,CAACR,OAAO;MAChC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAME,aAAa,GAAG,MAAAA,CAAA,KAA8B;IAClD,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE,OAAO,KAAK;IAElC,IAAI;MACF,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAC5BC,MAAM,EAAE,4BAA4B;QACpCC,MAAM,EAAE,CAAC;UAAEjB,OAAO,EAAE,KAAKnB,iBAAiB,CAACmB,OAAO,CAACkB,QAAQ,CAAC,EAAE,CAAC;QAAG,CAAC;MACrE,CAAC,CAAC;MACF,OAAO,IAAI;IACb,CAAC,CAAC,OAAOC,WAAgB,EAAE;MACzB;MACA,IAAIA,WAAW,CAACC,IAAI,KAAK,IAAI,EAAE;QAC7B,IAAI;UACF,MAAMP,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;YAC5BC,MAAM,EAAE,yBAAyB;YACjCC,MAAM,EAAE,CAAC;cACPjB,OAAO,EAAE,KAAKnB,iBAAiB,CAACmB,OAAO,CAACkB,QAAQ,CAAC,EAAE,CAAC,EAAE;cACtDG,SAAS,EAAExC,iBAAiB,CAACyC,IAAI;cACjCC,OAAO,EAAE,CAAC1C,iBAAiB,CAAC2C,MAAM,CAAC;cACnCC,iBAAiB,EAAE,CAAC5C,iBAAiB,CAAC6C,WAAW,CAAC;cAClDC,cAAc,EAAE;gBACdL,IAAI,EAAEzC,iBAAiB,CAAC+C,QAAQ,CAACN,IAAI;gBACrCO,MAAM,EAAEhD,iBAAiB,CAAC+C,QAAQ,CAACC,MAAM;gBACzCC,QAAQ,EAAEjD,iBAAiB,CAAC+C,QAAQ,CAACE;cACvC;YACF,CAAC;UACH,CAAC,CAAC;UACF,OAAO,IAAI;QACb,CAAC,CAAC,OAAOC,QAAQ,EAAE;UACjBpB,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEqB,QAAQ,CAAC;UAChDjD,KAAK,CAAC4B,KAAK,CAAC,gCAAgC,CAAC;UAC7C,OAAO,KAAK;QACd;MACF,CAAC,MAAM;QACLC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAES,WAAW,CAAC;QACtDrC,KAAK,CAAC4B,KAAK,CAAC,sCAAsC,CAAC;QACnD,OAAO,KAAK;MACd;IACF;EACF,CAAC;EAED,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACnB,MAAM,CAACC,QAAQ,EAAE;MACpBhC,KAAK,CAAC4B,KAAK,CAAC,8CAA8C,CAAC;MAC3D;IACF;IAEAf,SAAS,CAACc,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEX,YAAY,EAAE;IAAK,CAAC,CAAC,CAAC;IAEpD,IAAI;MACF;MACA,MAAMmC,QAAQ,GAAG,MAAMpB,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAC7CC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAIiB,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;QACzBpD,KAAK,CAAC4B,KAAK,CAAC,mBAAmB,CAAC;QAChC;MACF;MAEA,MAAMyB,WAAW,GAAG,IAAIvD,MAAM,CAACwD,eAAe,CAACvB,MAAM,CAACC,QAAQ,CAAC;MAC/D,MAAMuB,OAAO,GAAG,MAAMF,WAAW,CAACG,UAAU,CAAC,CAAC;;MAE9C;MACA,IAAIC,MAAM,CAACF,OAAO,CAACrC,OAAO,CAAC,KAAKnB,iBAAiB,CAACmB,OAAO,EAAE;QACzD,MAAMwC,QAAQ,GAAG,MAAM5B,aAAa,CAAC,CAAC;QACtC,IAAI,CAAC4B,QAAQ,EAAE;UACb7C,SAAS,CAACc,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAEX,YAAY,EAAE;UAAM,CAAC,CAAC,CAAC;UACrD;QACF;MACF;MAEA,MAAM2C,SAAS,GAAG,MAAMN,WAAW,CAACO,SAAS,CAAC,CAAC;MAC/C,MAAM9C,OAAO,GAAG,MAAM6C,SAAS,CAACE,UAAU,CAAC,CAAC;MAC5C,MAAM9C,OAAO,GAAG,MAAMsC,WAAW,CAAC3B,UAAU,CAACZ,OAAO,CAAC;MAErDM,WAAW,CAACiC,WAAW,CAAC;MACxB/B,SAAS,CAACqC,SAAS,CAAC;MACpB9C,SAAS,CAAC;QACRC,OAAO;QACPC,OAAO,EAAEQ,aAAa,CAACR,OAAO,CAAC;QAC/BC,YAAY,EAAE,KAAK;QACnBC,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAEuC,MAAM,CAACF,OAAO,CAACrC,OAAO;MACjC,CAAC,CAAC;MAEFlB,KAAK,CAAC8D,OAAO,CAAC,gCAAgC,CAAC;;MAE/C;MACAC,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;IAEjD,CAAC,CAAC,OAAOpC,KAAU,EAAE;MACnBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,IAAIA,KAAK,CAACU,IAAI,KAAK,IAAI,EAAE;QACvBtC,KAAK,CAAC4B,KAAK,CAAC,6BAA6B,CAAC;MAC5C,CAAC,MAAM;QACL5B,KAAK,CAAC4B,KAAK,CAAC,0BAA0B,CAAC;MACzC;MACAf,SAAS,CAACc,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEX,YAAY,EAAE;MAAM,CAAC,CAAC,CAAC;IACvD;EACF,CAAC;EAED,MAAMiD,gBAAgB,GAAGA,CAAA,KAAM;IAC7BpD,SAAS,CAAC;MACRC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,GAAG;MACZC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE;IACX,CAAC,CAAC;IACFE,WAAW,CAAC,IAAI,CAAC;IACjBE,SAAS,CAAC,IAAI,CAAC;IACfyC,YAAY,CAACG,UAAU,CAAC,iBAAiB,CAAC;IAC1ClE,KAAK,CAAC8D,OAAO,CAAC,qBAAqB,CAAC;EACtC,CAAC;;EAED;EACAjE,SAAS,CAAC,MAAM;IACd,MAAMsE,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAIJ,YAAY,CAACK,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM,IAAIrC,MAAM,CAACC,QAAQ,EAAE;QACzE,IAAI;UACF,MAAMmB,QAAQ,GAAG,MAAMpB,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;YAC7CC,MAAM,EAAE;UACV,CAAC,CAAC;UAEF,IAAIiB,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;YACvB,MAAMF,aAAa,CAAC,CAAC;UACvB;QACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;MACF;IACF,CAAC;IAEDuC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtE,SAAS,CAAC,MAAM;IACd,IAAI,CAACkC,MAAM,CAACC,QAAQ,EAAE;IAEtB,MAAMqC,qBAAqB,GAAIlB,QAAkB,IAAK;MACpD,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;QACzBa,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM,IAAId,QAAQ,CAAC,CAAC,CAAC,KAAKvC,MAAM,CAACE,OAAO,EAAE;QACzC;QACAoC,aAAa,CAAC,CAAC;MACjB;IACF,CAAC;IAED,MAAMoB,kBAAkB,GAAIpD,OAAe,IAAK;MAC9C,MAAMqD,UAAU,GAAGC,QAAQ,CAACtD,OAAO,EAAE,EAAE,CAAC;MACxCL,SAAS,CAACc,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAET,OAAO,EAAEqD;MAAW,CAAC,CAAC,CAAC;MAErD,IAAIA,UAAU,KAAKxE,iBAAiB,CAACmB,OAAO,IAAIN,MAAM,CAACK,WAAW,EAAE;QAClEjB,KAAK,CAAC4B,KAAK,CAAC,uCAAuC,CAAC;MACtD;IACF,CAAC;IAED,MAAM6C,gBAAgB,GAAGA,CAAA,KAAM;MAC7BR,gBAAgB,CAAC,CAAC;IACpB,CAAC;IAEDlC,MAAM,CAACC,QAAQ,CAAC0C,EAAE,CAAC,iBAAiB,EAAEL,qBAAqB,CAAC;IAC5DtC,MAAM,CAACC,QAAQ,CAAC0C,EAAE,CAAC,cAAc,EAAEJ,kBAAkB,CAAC;IACtDvC,MAAM,CAACC,QAAQ,CAAC0C,EAAE,CAAC,YAAY,EAAED,gBAAgB,CAAC;IAElD,OAAO,MAAM;MAAA,IAAAE,gBAAA;MACX,KAAAA,gBAAA,GAAI5C,MAAM,CAACC,QAAQ,cAAA2C,gBAAA,eAAfA,gBAAA,CAAiBC,cAAc,EAAE;QACnC7C,MAAM,CAACC,QAAQ,CAAC4C,cAAc,CAAC,iBAAiB,EAAEP,qBAAqB,CAAC;QACxEtC,MAAM,CAACC,QAAQ,CAAC4C,cAAc,CAAC,cAAc,EAAEN,kBAAkB,CAAC;QAClEvC,MAAM,CAACC,QAAQ,CAAC4C,cAAc,CAAC,YAAY,EAAEH,gBAAgB,CAAC;MAChE;IACF,CAAC;EACH,CAAC,EAAE,CAAC7D,MAAM,CAACE,OAAO,EAAEF,MAAM,CAACK,WAAW,CAAC,CAAC;;EAExC;EACApB,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,MAAM,CAACK,WAAW,IAAI,CAACE,QAAQ,IAAI,CAACP,MAAM,CAACE,OAAO,EAAE;IAEzD,MAAM+D,QAAQ,GAAGC,WAAW,CAACrD,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;;IAErD,OAAO,MAAMsD,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACjE,MAAM,CAACK,WAAW,EAAEE,QAAQ,EAAEP,MAAM,CAACE,OAAO,CAAC,CAAC;EAElD,MAAMkE,KAAK,GAAG;IACZpE,MAAM;IACNO,QAAQ;IACRE,MAAM;IACN6B,aAAa;IACbe,gBAAgB;IAChBnC,aAAa;IACbL;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAAC8E,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtE,QAAA,EAChCA;EAAQ;IAAAwE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA1E,GAAA,CAxOaF,YAAyC;AAAA6E,EAAA,GAAzC7E,YAAyC;AAAA,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}